{
  "name": "Virtual Concierge",
  "intents": [
    {
      "intent": "Bot_Control_Standby",
      "examples": [
        {
          "text": "Keep holding"
        },
        {
          "text": "Let me see"
        },
        {
          "text": "Can you wait for me?"
        },
        {
          "text": "Need a minute here"
        },
        {
          "text": "Out for a break"
        },
        {
          "text": "Wait"
        },
        {
          "text": "Back again soon"
        },
        {
          "text": "Hold on"
        },
        {
          "text": "Give me a second"
        },
        {
          "text": "Give me a moment"
        },
        {
          "text": "Give me a few minutes to get together"
        },
        {
          "text": "I will be back"
        },
        {
          "text": "I would like to put you on hold"
        },
        {
          "text": "Just a sec"
        },
        {
          "text": "Just hold on"
        },
        {
          "text": "I want stop a moment"
        },
        {
          "text": "In a moment"
        },
        {
          "text": "Be back later"
        },
        {
          "text": "Be patient with me"
        },
        {
          "text": "Can you give me a moment?"
        }
      ],
      "description": "Indicate a delay in providing input to the bot."
    },
    {
      "intent": "General_Negative_Feedback",
      "examples": [
        {
          "text": "Hate you"
        },
        {
          "text": "You do not seem smart"
        },
        {
          "text": "You're really irritating"
        },
        {
          "text": "You're too stupid"
        },
        {
          "text": "Why are you so annoying?"
        },
        {
          "text": "I hate this!"
        },
        {
          "text": "Why are you stupid?"
        },
        {
          "text": "You are having delusions"
        },
        {
          "text": "I do not like you"
        },
        {
          "text": "Everyone hates you"
        },
        {
          "text": "Do not like you?"
        },
        {
          "text": "Stupid"
        },
        {
          "text": "You are on my nerves"
        },
        {
          "text": "I hate you"
        },
        {
          "text": "It is annoying"
        },
        {
          "text": "Quit annoying me"
        },
        {
          "text": "Robots are boring"
        },
        {
          "text": "You're really frustrating"
        },
        {
          "text": "Robots are stupid"
        },
        {
          "text": "You are very frustrating"
        }
      ],
      "description": "Express unfavorable feedback."
    },
    {
      "intent": "hotel_locations",
      "examples": [
        {
          "text": "I want to work out."
        },
        {
          "text": "Where do you serve lunch?"
        },
        {
          "text": "Where is hotel restaurant?"
        },
        {
          "text": "Where is the gym?"
        },
        {
          "text": "Where is the gym/fitness center"
        },
        {
          "text": "Where is the hotel cafe?"
        },
        {
          "text": "Where is the pool"
        },
        {
          "text": "Where is the restaurant"
        },
        {
          "text": "Where is the restaurant?"
        },
        {
          "text": "Where is the swimming pool?"
        },
        {
          "text": "Hi!  What's the quickest way to get from point A to point B."
        },
        {
          "text": "Do you have a sauna?"
        },
        {
          "text": "Where can I go swimming?"
        },
        {
          "text": "When can I go for a swim"
        },
        {
          "text": "Which floor is the gym/pool on?"
        },
        {
          "text": "I want to go swimming."
        },
        {
          "text": "Is there a local full service gym?"
        },
        {
          "text": "Is the pool outside?"
        },
        {
          "text": "I'm hungry. Where can I eat?"
        },
        {
          "text": "Do you have an outdoor pool?"
        },
        {
          "text": "can I get hot tea at breakfast?"
        },
        {
          "text": "any good time to go swimming"
        },
        {
          "text": "Whereabouts is the gym?"
        }
      ],
      "description": ""
    },
    {
      "intent": "order_pizza",
      "examples": [
        {
          "text": "medium pizza please and I don't want any red peppers",
          "mentions": [
            {
              "entity": "pizza_notoppings",
              "location": [
                41,
                52
              ]
            }
          ]
        },
        {
          "text": "I love anchovies so please send me a pizza full of them",
          "mentions": [
            {
              "entity": "pizza_toppings",
              "location": [
                7,
                16
              ]
            }
          ]
        },
        {
          "text": "I don't want red peppers or onions on my vegetarian pizza",
          "mentions": [
            {
              "entity": "pizza_notoppings",
              "location": [
                13,
                24
              ]
            },
            {
              "entity": "pizza_notoppings",
              "location": [
                28,
                34
              ]
            }
          ]
        },
        {
          "text": "I'd like a small margherita but please no anchovies",
          "mentions": [
            {
              "entity": "pizza_notoppings",
              "location": [
                42,
                51
              ]
            }
          ]
        },
        {
          "text": "I'd like a large hawaiian with extra pineeapple",
          "mentions": [
            {
              "entity": "pizza_toppings",
              "location": [
                37,
                47
              ]
            }
          ]
        },
        {
          "text": "Can I get a pizza with extra red peppers but no green peppers",
          "mentions": [
            {
              "entity": "pizza_toppings",
              "location": [
                29,
                40
              ]
            },
            {
              "entity": "pizza_notoppings",
              "location": [
                48,
                61
              ]
            }
          ]
        },
        {
          "text": "Can I get a hawaiian pizza with no pineapple",
          "mentions": [
            {
              "entity": "pizza_notoppings",
              "location": [
                35,
                44
              ]
            }
          ]
        },
        {
          "text": "a large vegetarian without onions",
          "mentions": [
            {
              "entity": "pizza_notoppings",
              "location": [
                27,
                33
              ]
            }
          ]
        },
        {
          "text": "I 'd like pepperoni pizza"
        },
        {
          "text": "I want to order a large pizza"
        },
        {
          "text": "I want to order a pizza"
        },
        {
          "text": "Can I order a pizza"
        },
        {
          "text": "Can you deliver a vegetarian pizza"
        },
        {
          "text": "Can I get a pizza margarita; small please"
        },
        {
          "text": "Can I order a pizza without pineapple",
          "mentions": [
            {
              "entity": "pizza_notoppings",
              "location": [
                28,
                37
              ]
            }
          ]
        },
        {
          "text": "Can I order a pizza with more cheese",
          "mentions": [
            {
              "entity": "pizza_toppings",
              "location": [
                30,
                36
              ]
            }
          ]
        },
        {
          "text": "can I have a pizza with onions, beef, chicken and extra cheese",
          "mentions": [
            {
              "entity": "pizza_toppings",
              "location": [
                24,
                30
              ]
            },
            {
              "entity": "pizza_toppings",
              "location": [
                32,
                36
              ]
            },
            {
              "entity": "pizza_toppings",
              "location": [
                38,
                45
              ]
            },
            {
              "entity": "pizza_toppings",
              "location": [
                56,
                62
              ]
            }
          ]
        },
        {
          "text": "can I have a carnivore pizza but no chicken",
          "mentions": [
            {
              "entity": "pizza_notoppings",
              "location": [
                36,
                43
              ]
            }
          ]
        }
      ]
    },
    {
      "intent": "General_Connect_to_Agent",
      "examples": [
        {
          "text": "Need help from human"
        },
        {
          "text": "A real agent, please."
        },
        {
          "text": "Send me to an agent"
        },
        {
          "text": "Where is the closest agent?"
        },
        {
          "text": "Yes, take me to a real person"
        },
        {
          "text": "Can I connect to an agent?"
        },
        {
          "text": "Can I speak to a human please?"
        },
        {
          "text": "Can I speak to a live person?"
        },
        {
          "text": "Can I speak to an advisor?"
        },
        {
          "text": "Can I speak with somebody?"
        },
        {
          "text": "Can I talk to someone?"
        },
        {
          "text": "Can you assist me to connect to an agent?"
        },
        {
          "text": "Can you connect me with a real person?"
        },
        {
          "text": "Connect me to a live operator please."
        },
        {
          "text": "Contact person"
        },
        {
          "text": "Put me through to someone"
        },
        {
          "text": "Could you please transfer me to your master?"
        },
        {
          "text": "Do not want a robot?"
        },
        {
          "text": "Agent help"
        },
        {
          "text": "Customer service representative please."
        },
        {
          "text": "How can I skip the recorded menu and go straight to a live person?"
        },
        {
          "text": "Hi can you transfer me"
        },
        {
          "text": "I would like to speak to someone"
        },
        {
          "text": "I would like to speak to a human"
        },
        {
          "text": "I want to talk to a person"
        },
        {
          "text": "I want an agent to help me"
        },
        {
          "text": "I want a manager"
        },
        {
          "text": "I want agent"
        },
        {
          "text": "Is there anyone there I can actually talk to for real?"
        },
        {
          "text": "I need to speak to a representative. How would I go about doing so?"
        },
        {
          "text": "I don't want to talk to you"
        },
        {
          "text": "I don't want to talk to a bot."
        },
        {
          "text": "Call agent"
        },
        {
          "text": "Operator please"
        },
        {
          "text": "Please assist me to get to an agent"
        },
        {
          "text": "Please connect me to a live agent"
        },
        {
          "text": "Please let me talk to a human being."
        },
        {
          "text": "Pls connect"
        }
      ],
      "description": "Request a human agent."
    },
    {
      "intent": "Bot_Control_Unsure",
      "examples": [
        {
          "text": "I don t know what you need"
        },
        {
          "text": "No idea"
        },
        {
          "text": "To be honest, I m really not sure"
        },
        {
          "text": "No clue"
        },
        {
          "text": "I haven't got a clue"
        },
        {
          "text": "I m not yet convinced"
        },
        {
          "text": "I m not sure what will make you happy"
        },
        {
          "text": "I m not certain I get what you re saying"
        },
        {
          "text": "You got me"
        },
        {
          "text": "I have no idea what you are looking for"
        },
        {
          "text": "I have no idea, actually"
        },
        {
          "text": "I don t know what you want"
        }
      ],
      "description": "Indicate no definite answer to a question."
    },
    {
      "intent": "local_recommend",
      "examples": [
        {
          "text": "Can you recommend a restaurant that is not a chain for Italian cuisine?"
        },
        {
          "text": "Good sitdown reaturants in the area."
        },
        {
          "text": "Is there a place to buy a toothbrush near here?"
        },
        {
          "text": "Where can I buy toiletries"
        },
        {
          "text": "Is there a convenience store near here?"
        },
        {
          "text": "Can you recommend a good Italian restaurant?"
        },
        {
          "text": "Can you make a dinner recommendation - we are thinking Italian."
        },
        {
          "text": "What pizza restaurants deliver to the hotel?"
        },
        {
          "text": "What fast food places are closed by the hotel?"
        },
        {
          "text": "Hi! Where's a hole in the wall restaurant that's not on your list and you would take your family to."
        },
        {
          "text": "Can you recommend a Japanese restaurant?"
        },
        {
          "text": "Is there any where I can get food to go around here?"
        },
        {
          "text": "What local restaurants have live music?"
        },
        {
          "text": "Is there a place close that I can walk to for dinner?"
        },
        {
          "text": "Can you recommend a restaurant for dinner? Perhaps chinese food or italian. Within walking distance of the hotel."
        },
        {
          "text": "What restaurants are in the mall?"
        },
        {
          "text": "Can you recommend some great upscale restaurants outside of the hotel?"
        },
        {
          "text": "What local restaurants have outdoor seating?"
        },
        {
          "text": "What local restaurants have Jazz music?"
        },
        {
          "text": "Is there a restaurant close by that you would recommend?"
        },
        {
          "text": "Can you recomend a restaurant?"
        },
        {
          "text": "Hey I was looking for someplace interesting to go eat; do you know anyplace nearby"
        },
        {
          "text": "What Chinese restaurants deliver to the hotel?"
        },
        {
          "text": "What are the best restaurants to visit that would provide me a taste of the town?"
        },
        {
          "text": "Can you recommend a good restaurant for dinner?"
        },
        {
          "text": "What local restaurants have happy hour?"
        },
        {
          "text": "We're looking for a good Chinese restaurant nearby. Any suggestions?"
        },
        {
          "text": "Is there any kind of to go food I can get?"
        },
        {
          "text": "Recommend me good restaurants close by?"
        },
        {
          "text": "Which restaurants deliver to the hotel?"
        },
        {
          "text": "Where can I get sushi?"
        },
        {
          "text": "Can I walk to that restaurant or do I need to take a cab?"
        },
        {
          "text": "Could you give me a recommendation for a good restaurant with Mexican food?"
        },
        {
          "text": "can you recommend a restaurant nearby?  i'm looking for \"x\" cuisine and \"x\" cost."
        },
        {
          "text": "I would like to have dinner at a nice restaurant.  Can you give me some ideas?"
        }
      ]
    },
    {
      "intent": "Bot_Control_Approve_Response",
      "examples": [
        {
          "text": "Sure thing!"
        },
        {
          "text": "That is precisely what I was looking for"
        },
        {
          "text": "This is alright"
        },
        {
          "text": "Sweet"
        },
        {
          "text": "Indeed!"
        },
        {
          "text": "I like that"
        },
        {
          "text": "Great"
        },
        {
          "text": "Got it"
        },
        {
          "text": "For sure!"
        },
        {
          "text": "Correct"
        },
        {
          "text": "All right"
        },
        {
          "text": "Affirmative. That's what I'm looking for."
        },
        {
          "text": "Very well. Let's do it."
        },
        {
          "text": "Yeah, that's it!"
        },
        {
          "text": "Yes"
        },
        {
          "text": "You read my mind"
        },
        {
          "text": "I agree"
        },
        {
          "text": "That's exactly what I want"
        },
        {
          "text": "That is what I need"
        },
        {
          "text": "That is the proper response."
        },
        {
          "text": "That is right"
        }
      ],
      "description": "Acknowledge that the response satisfies a question."
    },
    {
      "intent": "General_Agent_Capabilities",
      "examples": [
        {
          "text": "I'd like to know what type of questions you can answer for me."
        },
        {
          "text": "What can I ask you to do?"
        },
        {
          "text": "What do you do?"
        },
        {
          "text": "What do you handle?"
        },
        {
          "text": "What else can you help me with?"
        },
        {
          "text": "What features are in here?"
        },
        {
          "text": "What is this 4?"
        },
        {
          "text": "What kinds of things can you do?"
        },
        {
          "text": "Where can I find the frequently asked questions?"
        },
        {
          "text": "Can you tell me what services you are able to help me with?"
        },
        {
          "text": "Can you please give me a list of the types of things you can help me with?"
        },
        {
          "text": "Hi, what do you do?"
        },
        {
          "text": "How can you help?"
        },
        {
          "text": "How can you help me?"
        },
        {
          "text": "What are you able to understand?"
        },
        {
          "text": "What are you able to deal with?"
        },
        {
          "text": "What are my options that you can help with?"
        },
        {
          "text": "What are my options?"
        },
        {
          "text": "Tell me something"
        },
        {
          "text": "What are you used for?"
        },
        {
          "text": "I do not know what to ask"
        },
        {
          "text": "Is there anything you can help me with?"
        },
        {
          "text": "How can you solve my problems?"
        },
        {
          "text": "How do I use you?"
        },
        {
          "text": "How can I use you?"
        },
        {
          "text": "Do you have a list of things I can talk to you about?"
        },
        {
          "text": "What are you good at?"
        },
        {
          "text": "What are your skills?"
        },
        {
          "text": "Help now"
        },
        {
          "text": "What are you capable of?"
        },
        {
          "text": "Tell me about what kind of things you do?"
        }
      ],
      "description": "Request capabilities of the bot."
    },
    {
      "intent": "eat",
      "examples": [
        {
          "text": "I want to eat at an Italian restaurant.  What are the best ones around?"
        },
        {
          "text": "I want pasta"
        },
        {
          "text": "I am really hungry you know a good place to eat around here"
        },
        {
          "text": "Hello I'm starving I'm looking for a place to eat"
        },
        {
          "text": "I want some food"
        },
        {
          "text": "I am hungry"
        },
        {
          "text": "I am starving"
        },
        {
          "text": "I would like to eat something"
        },
        {
          "text": "I am looking for a restaurant"
        }
      ]
    },
    {
      "intent": "feedback",
      "examples": [
        {
          "text": "I'm having trouble following the instructions that are given"
        },
        {
          "text": "I like the way the documentation is written"
        },
        {
          "text": "I'm finding it very difficult to make any of this work"
        },
        {
          "text": "I don't think these nodes are very good - or at least they're not documented well."
        },
        {
          "text": "it's really horrendous how badly these nodes are documented - There is absolutely no way any body can follow that! Infuriating!"
        },
        {
          "text": "I love the way that the new breaking news service works!"
        },
        {
          "text": "The watson starter kit is awesome!"
        },
        {
          "text": "These new nodes are awesome! I love the way they are used in the new flows!"
        }
      ]
    },
    {
      "intent": "repeat_request",
      "examples": [
        {
          "text": "I didn't hear you"
        },
        {
          "text": "say that again please"
        },
        {
          "text": "come again"
        },
        {
          "text": "say what"
        },
        {
          "text": "repeat that"
        },
        {
          "text": "say that again"
        },
        {
          "text": "what did you say"
        },
        {
          "text": "I didn't hear that"
        },
        {
          "text": "I couldn't hear you"
        },
        {
          "text": "I couldn't hear that"
        },
        {
          "text": "say again"
        },
        {
          "text": "plese repeat"
        },
        {
          "text": "what was that"
        },
        {
          "text": "what did ya say"
        },
        {
          "text": "can you repeat that please"
        }
      ]
    },
    {
      "intent": "hotel_procedure",
      "examples": [
        {
          "text": "Hey can I get some new towels up to my room"
        },
        {
          "text": "How do I arrange a shuttle or taxi to the airport?"
        },
        {
          "text": "How do I adjust the heat/AC in the guestroom?"
        },
        {
          "text": "How do I set the clock alarm in the guestroom?"
        },
        {
          "text": "How do I arrange a shuttle or a taxi to the airport?"
        },
        {
          "text": "How do I book a large reservation in the restaurant?"
        },
        {
          "text": "How can I book a taxi?"
        },
        {
          "text": "How can I book a cab?"
        },
        {
          "text": "how do I turn the ac off in my room"
        },
        {
          "text": "How can I arrange transportation?"
        }
      ]
    },
    {
      "intent": "General_Positive_Feedback",
      "examples": [
        {
          "text": "Can't believe you are that good"
        },
        {
          "text": "This is good"
        },
        {
          "text": "This is great"
        },
        {
          "text": "This is so cool"
        },
        {
          "text": "You are awesome"
        },
        {
          "text": "You are great"
        },
        {
          "text": "How cool is this?"
        },
        {
          "text": "I like what you did there! :)"
        },
        {
          "text": "I'm looking forward to working with you again! :)"
        },
        {
          "text": "Love your work"
        },
        {
          "text": "Ok thank you"
        },
        {
          "text": "Thank you"
        },
        {
          "text": "You are the best"
        },
        {
          "text": "You are wonderful"
        },
        {
          "text": "You gave me exactly what I need!"
        },
        {
          "text": "You're a genius!"
        },
        {
          "text": "You the man"
        },
        {
          "text": "You've been so helpful :)"
        },
        {
          "text": "Brilliant!"
        }
      ],
      "description": "Express positive sentiment or gratitude."
    },
    {
      "intent": "General_Security_Assurance",
      "examples": [
        {
          "text": "Is this a trusted chat site?"
        },
        {
          "text": "Precautions hackers?"
        },
        {
          "text": "Protection hacks?"
        },
        {
          "text": "Secure conversation?"
        },
        {
          "text": "What guards do you have in place to protect your customer's data?"
        },
        {
          "text": "What makes this chat trustworthy?"
        },
        {
          "text": "Are you safe?"
        },
        {
          "text": "Are you safe on hackers?"
        },
        {
          "text": "Is my payment information secure?"
        },
        {
          "text": "Will my conversation remain secured?"
        },
        {
          "text": "Is this an official chat?"
        },
        {
          "text": "Is this conversation secure?"
        },
        {
          "text": "What safety measures are used to ensure that chat is secure?"
        },
        {
          "text": "Why would I trust this chat?"
        },
        {
          "text": "In what way can I tell if my plastic is safe?"
        },
        {
          "text": "I'd like proof of a secure chat"
        },
        {
          "text": "How safe is my data?"
        },
        {
          "text": "How is my credit card info secured?"
        },
        {
          "text": "How do I know this chat is not a scam?"
        },
        {
          "text": "How do I know if my card info is kept safe?"
        },
        {
          "text": "Do you have protection against hacks?"
        },
        {
          "text": "Customer info secured?"
        },
        {
          "text": "Conversation secure?"
        },
        {
          "text": "Can I be sure that my stored card details are held securely?"
        },
        {
          "text": "Is my card info secure?"
        },
        {
          "text": "Is there a reason to distrust this chat?"
        }
      ],
      "description": "Express concerns about the security of the bot."
    },
    {
      "intent": "exit",
      "examples": [
        {
          "text": "get me out"
        },
        {
          "text": "I don't want to go further"
        },
        {
          "text": "exit"
        },
        {
          "text": "get me out of here"
        },
        {
          "text": "stop the order"
        },
        {
          "text": "cancel"
        }
      ]
    },
    {
      "intent": "Bot_Control_Reject_Response",
      "examples": [
        {
          "text": "That sounds like the wrong response"
        },
        {
          "text": "Bad response"
        },
        {
          "text": "I do not think it is the answer?"
        },
        {
          "text": "I don't need that"
        },
        {
          "text": "I don't want that"
        },
        {
          "text": "It is not what I want"
        },
        {
          "text": "It is not what I was looking for"
        },
        {
          "text": "I wasn't looking for that"
        },
        {
          "text": "No I'm fine thanks"
        },
        {
          "text": "Not the right response"
        },
        {
          "text": "That answer is incorrect"
        },
        {
          "text": "That was not my intent"
        },
        {
          "text": "That was wrong, try again"
        },
        {
          "text": "Wrong response"
        },
        {
          "text": "You did not understand what I asked"
        },
        {
          "text": "You did not understand what I said"
        },
        {
          "text": "You didn't understand me"
        },
        {
          "text": "You're misunderstanding me"
        },
        {
          "text": "No"
        },
        {
          "text": "I disagree"
        },
        {
          "text": "That is not true"
        }
      ],
      "description": "Indicate the bot's response does not address a question."
    },
    {
      "intent": "Bot_Control_Clarification",
      "examples": [
        {
          "text": "I did not quite understand what you gave me"
        },
        {
          "text": "Explains"
        },
        {
          "text": "Come again?"
        },
        {
          "text": "Can you say that again please?"
        },
        {
          "text": "What are you referring to?"
        },
        {
          "text": "Let's try to say that again more clearly, shall we?"
        },
        {
          "text": "I need more information"
        },
        {
          "text": "I don't understand what you're saying"
        },
        {
          "text": "I don't understand"
        },
        {
          "text": "I didn't quite understand what you said"
        },
        {
          "text": "I didn't understand that properly"
        },
        {
          "text": "I don't get it"
        },
        {
          "text": "What do you mean by that?"
        },
        {
          "text": "What do you mean?"
        },
        {
          "text": "What are you talking about?"
        },
        {
          "text": "What are you saying?"
        },
        {
          "text": "I didn't catch that"
        }
      ],
      "description": "Repeat or clarify last statement."
    },
    {
      "intent": "Bot_Control_Start_Over",
      "examples": [
        {
          "text": "Back to the top"
        },
        {
          "text": "Let's go back to square one"
        },
        {
          "text": "I would like to start all over"
        },
        {
          "text": "I want start from the beginning"
        },
        {
          "text": "I need to reset."
        },
        {
          "text": "How can I start over?"
        },
        {
          "text": "Can we please start over?"
        },
        {
          "text": "Begin over!"
        },
        {
          "text": "Back to the beginning"
        },
        {
          "text": "Actually, let's start over"
        },
        {
          "text": "Let's pick this up from the top again."
        },
        {
          "text": "Let us reopen this again."
        },
        {
          "text": "One more time from the beginning"
        },
        {
          "text": "Please initiate from the beginning"
        },
        {
          "text": "Please reset"
        },
        {
          "text": "Please start a new chat"
        },
        {
          "text": "Restart"
        },
        {
          "text": "We will need to begin again"
        },
        {
          "text": "We need a do-over"
        },
        {
          "text": "Start over"
        }
      ],
      "description": "Restart bot or current flow."
    },
    {
      "intent": "General_Greetings",
      "examples": [
        {
          "text": "Ok take me back"
        },
        {
          "text": "Hey how are you doing"
        },
        {
          "text": "Hey there all"
        },
        {
          "text": "Hey there"
        },
        {
          "text": "Hey twin"
        },
        {
          "text": "Hello Agent"
        },
        {
          "text": "Hello I am looking for some help here"
        },
        {
          "text": "What's new?"
        },
        {
          "text": "Looking good eve"
        },
        {
          "text": "How r u?"
        },
        {
          "text": "How is it going?"
        },
        {
          "text": "How have you been?"
        },
        {
          "text": "How are you today?"
        },
        {
          "text": "How are things going?"
        },
        {
          "text": "Hey you"
        },
        {
          "text": "Hi advisor"
        },
        {
          "text": "Hi there"
        },
        {
          "text": "What's up?"
        },
        {
          "text": "Who is this?"
        },
        {
          "text": "You there"
        },
        {
          "text": "Have you been well?"
        },
        {
          "text": "Hello"
        },
        {
          "text": "Greetings"
        },
        {
          "text": "Good to see you"
        },
        {
          "text": "Good morning"
        },
        {
          "text": "Good evening"
        },
        {
          "text": "Good day"
        }
      ],
      "description": "Greet the bot."
    },
    {
      "intent": "Bot_Control_Change_Subject",
      "examples": [
        {
          "text": "I have one more question"
        },
        {
          "text": "Let us talk about something else"
        },
        {
          "text": "Discuss something else"
        },
        {
          "text": "Help me with this other question"
        },
        {
          "text": "A different matter"
        },
        {
          "text": "Another thing"
        },
        {
          "text": "Can we talk about something else?"
        },
        {
          "text": "Change topic"
        },
        {
          "text": "Let us change the topic"
        },
        {
          "text": "Talk about something else"
        },
        {
          "text": "Here is another issue"
        },
        {
          "text": "Chat about something else"
        }
      ],
      "description": "Change to a different topic."
    },
    {
      "intent": "Bot_Control_Ignore_Undo",
      "examples": [
        {
          "text": "Nothing"
        },
        {
          "text": "Never mind"
        },
        {
          "text": "Never"
        },
        {
          "text": "Let us redo that again!"
        },
        {
          "text": "It's not what I mean"
        },
        {
          "text": "Actually, I take that back"
        },
        {
          "text": "I didn't mean to do that actually, let's go back"
        },
        {
          "text": "Cancel"
        },
        {
          "text": "Not yet"
        },
        {
          "text": "Wait! Let's back up few steps and do that again"
        },
        {
          "text": "I did not mean that?"
        },
        {
          "text": "I change my mind."
        },
        {
          "text": "Hold on! I think I want to do it differently."
        },
        {
          "text": "Ignore this"
        }
      ],
      "description": "Ask the bot to take one step back."
    },
    {
      "intent": "General_Jokes",
      "examples": [
        {
          "text": "Do you have a joke?"
        },
        {
          "text": "What is your favorite joke?"
        },
        {
          "text": "Tell me a joke"
        },
        {
          "text": "Surprise me with something hilarious"
        },
        {
          "text": "One more joke"
        },
        {
          "text": "I want a joke"
        },
        {
          "text": "I'm bored"
        },
        {
          "text": "I am getting bored"
        },
        {
          "text": "Do you like humor?"
        },
        {
          "text": "Do you like fun?"
        },
        {
          "text": "Do you have humor?"
        },
        {
          "text": "Can you tell me a joke?"
        },
        {
          "text": "Can you tell a joke?"
        },
        {
          "text": "Are there jokes?"
        },
        {
          "text": "Another joke"
        },
        {
          "text": "Tell me something funny"
        },
        {
          "text": "What do you do for fun?"
        }
      ],
      "description": "Request a joke."
    },
    {
      "intent": "reset",
      "examples": [
        {
          "text": "stop ordering"
        },
        {
          "text": "delete the inputs"
        },
        {
          "text": "reset"
        },
        {
          "text": "reset operation"
        },
        {
          "text": "cancel the order"
        }
      ]
    },
    {
      "intent": "hotel_info",
      "examples": [
        {
          "text": "Do you have a bike?"
        },
        {
          "text": "Do you have an elliptical?"
        },
        {
          "text": "Do you have weights?"
        },
        {
          "text": "What size is the pool?"
        },
        {
          "text": "Do you have an outdoor/ indoor pool?"
        },
        {
          "text": "Can I order food at the pool?"
        },
        {
          "text": "how do I get the gym?"
        },
        {
          "text": "Is there a lifeguard?"
        },
        {
          "text": "Can I bring food to the pool?"
        },
        {
          "text": "What is the length of the Pool?"
        },
        {
          "text": "How deep is the pool?"
        },
        {
          "text": "Do you have water in your gym?"
        },
        {
          "text": "Is the pool heated?"
        }
      ]
    },
    {
      "intent": "General_Human_or_Bot",
      "examples": [
        {
          "text": "Am I talking to a Bot?"
        },
        {
          "text": "Am I talking to a person or am I talking to an AI?"
        },
        {
          "text": "Am I talking to Watson?"
        },
        {
          "text": "Are you a human or a bot?"
        },
        {
          "text": "Are you a robot?"
        },
        {
          "text": "Are you even real?"
        },
        {
          "text": "Are you human?"
        },
        {
          "text": "Are you real?"
        },
        {
          "text": "How can you prove you are a human?"
        },
        {
          "text": "Is this a computer?"
        },
        {
          "text": "Tell me, are you a human or no?"
        },
        {
          "text": "Am I chatting with a human?"
        }
      ],
      "description": "Ask if speaking to a human or a bot."
    },
    {
      "intent": "hotel_hours",
      "examples": [
        {
          "text": "What time can I grab dinner?"
        },
        {
          "text": "What's the lunch time?"
        },
        {
          "text": "What time does the restaurant close?"
        },
        {
          "text": "When are you serving dinner?"
        },
        {
          "text": "When does the gym close?"
        },
        {
          "text": "When is the gym open?"
        },
        {
          "text": "When is the pool open?"
        },
        {
          "text": "what's open right now"
        },
        {
          "text": "What are your hours of the restaurant?"
        },
        {
          "text": "What are the pool and Fitness Center hours ?"
        },
        {
          "text": "What are the hours of your restaurant?"
        },
        {
          "text": "What are the hours of the gym?"
        },
        {
          "text": "What are the hotel Restaurant hours of operation?"
        },
        {
          "text": "hours fo pool"
        },
        {
          "text": "What time does the lounge/restaurant open"
        },
        {
          "text": "What time does the food place open?"
        }
      ]
    },
    {
      "intent": "General_Ending",
      "examples": [
        {
          "text": "Time to go"
        },
        {
          "text": "Have a nice day?"
        },
        {
          "text": "Goodbye"
        },
        {
          "text": "Hey bot go away"
        },
        {
          "text": "I am leaving"
        },
        {
          "text": "I am out of here"
        },
        {
          "text": "I d like to stop doing this"
        },
        {
          "text": "I have got to go"
        },
        {
          "text": "I'm done"
        },
        {
          "text": "Im done"
        },
        {
          "text": "Im good thank you"
        },
        {
          "text": "I'm leaving now"
        },
        {
          "text": "It was nice chatting with you"
        },
        {
          "text": "I want to quit"
        },
        {
          "text": "Ok goodbye"
        },
        {
          "text": "See you later"
        },
        {
          "text": "Shut up"
        },
        {
          "text": "Stop doing this"
        },
        {
          "text": "Stop talking to me"
        },
        {
          "text": "Thanks, bye!"
        },
        {
          "text": "Thanks very much, bye!"
        },
        {
          "text": "Thank you for your time"
        },
        {
          "text": "That is all"
        },
        {
          "text": "That's everything"
        },
        {
          "text": "Good. bye."
        },
        {
          "text": "See you"
        },
        {
          "text": "Bye bye"
        },
        {
          "text": "Bye now"
        },
        {
          "text": "Catch you later"
        },
        {
          "text": "Cya later"
        },
        {
          "text": "Ending this session"
        },
        {
          "text": "Go off"
        },
        {
          "text": "End trial"
        },
        {
          "text": "Finished now, good bye"
        },
        {
          "text": "Get lost"
        },
        {
          "text": "Go away"
        },
        {
          "text": "Going now"
        }
      ],
      "description": "End the conversation."
    },
    {
      "intent": "General_About_You",
      "examples": [
        {
          "text": "How do you function?"
        },
        {
          "text": "Do you know who you are?"
        },
        {
          "text": "Do you have a name?"
        },
        {
          "text": "Describe your self"
        },
        {
          "text": "Tell me about your life"
        },
        {
          "text": "Let us talk about you"
        },
        {
          "text": "I want to set up the chat bot for my shop"
        },
        {
          "text": "Introduce your self"
        },
        {
          "text": "How old are you?"
        },
        {
          "text": "How can I configure you?"
        },
        {
          "text": "Can I use another language?"
        },
        {
          "text": "About you"
        },
        {
          "text": "Why are you here?"
        },
        {
          "text": "Who are you?"
        },
        {
          "text": "Where were you born?"
        },
        {
          "text": "Where are you from?"
        },
        {
          "text": "What's your name?"
        },
        {
          "text": "What should I know about you?"
        },
        {
          "text": "What languages do you speak?"
        },
        {
          "text": "Tell me something about yourself"
        }
      ],
      "description": "Request generic personal attributes."
    },
    {
      "intent": "update_profile",
      "examples": [
        {
          "text": "I would like to refresh my profile"
        },
        {
          "text": "Can you change my ID?"
        },
        {
          "text": "update the identity"
        },
        {
          "text": "Can I set a new nickname?"
        },
        {
          "text": "I want to update my profile"
        },
        {
          "text": "I need to reset my name"
        }
      ]
    },
    {
      "intent": "Bot_Control_Confirm_Presence",
      "examples": [
        {
          "text": "Are you still around?"
        },
        {
          "text": "Are you there?"
        },
        {
          "text": "Did you go somewhere?"
        },
        {
          "text": "Did you hear what I said?"
        },
        {
          "text": "Have I lost you?"
        },
        {
          "text": "I am still holding"
        },
        {
          "text": "Is anybody here?"
        },
        {
          "text": "Is anybody home?"
        },
        {
          "text": "Speak to me if you are there."
        },
        {
          "text": "You around?"
        },
        {
          "text": "Where'd you go?"
        },
        {
          "text": "Am I talking to someone?"
        },
        {
          "text": "Anyone there?"
        },
        {
          "text": "Are you leaving me?"
        },
        {
          "text": "Are you on?"
        },
        {
          "text": "Are you still here with me?"
        }
      ],
      "description": "Ask the bot to indicate that it is available."
    }
  ],
  "entities": [
    {
      "entity": "sys-person",
      "values": []
    },
    {
      "entity": "sys-date",
      "values": []
    },
    {
      "entity": "sys-time",
      "values": []
    },
    {
      "entity": "mealtime",
      "values": [
        {
          "type": "synonyms",
          "value": "lunch",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "breakfast",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "dinner",
          "synonyms": [
            "supper"
          ]
        }
      ]
    },
    {
      "entity": "pizza_toppings",
      "values": [
        {
          "type": "synonyms",
          "value": "salamy",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "beef",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "chilli",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "pineapple",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "chicken",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "ham",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "cheese",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "anchovies",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "olive",
          "synonyms": [
            "olive"
          ]
        },
        {
          "type": "synonyms",
          "value": "green peppers",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "pineeapple",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "onions",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "olives",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "red peppers",
          "synonyms": []
        }
      ],
      "fuzzy_match": true
    },
    {
      "entity": "sys-currency",
      "values": []
    },
    {
      "entity": "pattern",
      "values": [
        {
          "type": "patterns",
          "value": "email address",
          "patterns": [
            "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b"
          ]
        }
      ],
      "fuzzy_match": false
    },
    {
      "entity": "sys-number",
      "values": []
    },
    {
      "entity": "sys-percentage",
      "values": []
    },
    {
      "entity": "sys-location",
      "values": []
    },
    {
      "entity": "pizza_confirmed",
      "values": [
        {
          "type": "synonyms",
          "value": "reject",
          "synonyms": [
            "reject",
            "no"
          ]
        },
        {
          "type": "synonyms",
          "value": "yes",
          "synonyms": [
            "sure",
            "I confirm",
            "confirmed",
            "agreed"
          ]
        }
      ]
    },
    {
      "entity": "guestroom",
      "values": [
        {
          "type": "synonyms",
          "value": "alarm_clock",
          "synonyms": [
            "alarm clock",
            "radio clock",
            "radio",
            "clock",
            "alarm"
          ]
        },
        {
          "type": "synonyms",
          "value": "heat_ac",
          "synonyms": [
            "air conditioning",
            "heat",
            "temperature",
            "room temperature",
            "heater",
            "cooler",
            "ac"
          ]
        },
        {
          "type": "synonyms",
          "value": "towels",
          "synonyms": [
            "linen",
            "linens",
            "wash cloth",
            "towel"
          ]
        }
      ]
    },
    {
      "entity": "pizza_notoppings",
      "values": [
        {
          "type": "synonyms",
          "value": "chicken",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "onions",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "pineapple",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "red peppers",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "green peppers",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "beef",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "olives",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "anchovies",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "cheese",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "chilli",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "ham",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "salamy",
          "synonyms": []
        }
      ],
      "fuzzy_match": true
    },
    {
      "entity": "restaurant",
      "values": [
        {
          "type": "synonyms",
          "value": "coffee_shop",
          "synonyms": [
            "starbucks",
            "dunking",
            "dunkin",
            "coffee shop",
            "coffee place"
          ]
        },
        {
          "type": "synonyms",
          "value": "french_restaurant",
          "synonyms": [
            "french",
            "french food",
            "macaron",
            "frog legs",
            "brasserie",
            "french restaurant"
          ]
        },
        {
          "type": "synonyms",
          "value": "japanese_restaurant",
          "synonyms": [
            "japanese",
            "sushi",
            "japanese restaurant",
            "japanese food"
          ]
        },
        {
          "type": "synonyms",
          "value": "pizza_restaurant",
          "synonyms": [
            "pizzeria",
            "pizza pie",
            "pizza",
            "pizza restaurant"
          ]
        },
        {
          "type": "synonyms",
          "value": "italian_restaurant",
          "synonyms": [
            "italian",
            "pasta",
            "italian restaurant",
            "italian place",
            "italian food",
            "italian cuisine"
          ]
        },
        {
          "type": "synonyms",
          "value": "steak_house",
          "synonyms": [
            "mexican",
            "texan",
            "tex-mex",
            "meat",
            "beef",
            "steak house"
          ]
        },
        {
          "type": "synonyms",
          "value": "fast_food",
          "synonyms": [
            "junk food",
            "hamburger",
            "fast food"
          ]
        },
        {
          "type": "synonyms",
          "value": "chinese_restaurant",
          "synonyms": [
            "chinese",
            "chinese food",
            "noodles",
            "spring roll",
            "chinese restaurant"
          ]
        }
      ]
    },
    {
      "entity": "hotel_amenity",
      "values": [
        {
          "type": "synonyms",
          "value": "pool",
          "synonyms": [
            "swimming pool",
            "swimming",
            "lifeguard"
          ]
        },
        {
          "type": "synonyms",
          "value": "wellness center",
          "synonyms": [
            "sauna",
            "wellness"
          ]
        },
        {
          "type": "synonyms",
          "value": "gym",
          "synonyms": [
            "weights",
            "lift weights",
            "fitness center",
            "elliptical",
            "bike",
            "gym"
          ]
        },
        {
          "type": "synonyms",
          "value": "hotel restaurant",
          "synonyms": [
            "restaurant",
            "your restaurant",
            "lounge",
            "hotel restaurant",
            "hotel lounge",
            "food place"
          ]
        }
      ],
      "fuzzy_match": true
    },
    {
      "entity": "places",
      "values": [
        {
          "type": "synonyms",
          "value": "sitdown",
          "synonyms": [
            "eat-in",
            "eat in",
            "sit down"
          ]
        },
        {
          "type": "synonyms",
          "value": "restaurant",
          "synonyms": [
            "local restaurant"
          ]
        },
        {
          "type": "synonyms",
          "value": "food_to_go",
          "synonyms": [
            "food to go",
            "to go food",
            "carry out",
            "take away"
          ]
        }
      ]
    },
    {
      "entity": "pizza_type",
      "values": [
        {
          "type": "synonyms",
          "value": "vegetarian",
          "synonyms": [
            "vegetariana"
          ]
        },
        {
          "type": "synonyms",
          "value": "quatro formaggi",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "pepperoni",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "margherita",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "mexicana",
          "synonyms": [
            "mexican"
          ]
        }
      ]
    },
    {
      "entity": "pizza_size",
      "values": [
        {
          "type": "synonyms",
          "value": "large",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "medium",
          "synonyms": [
            "regular"
          ]
        },
        {
          "type": "synonyms",
          "value": "small",
          "synonyms": []
        }
      ]
    },
    {
      "entity": "transportation",
      "values": [
        {
          "type": "synonyms",
          "value": "taxi",
          "synonyms": [
            "uber",
            "cab"
          ]
        },
        {
          "type": "synonyms",
          "value": "shuttle",
          "synonyms": []
        }
      ]
    }
  ],
  "language": "en",
  "metadata": {
    "api_version": {
      "major_version": "v1",
      "minor_version": "2018-09-20"
    }
  },
  "description": "Dor demos only",
  "dialog_nodes": [
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_12_1535099997177",
      "context": {
        "pizza_toppings": "@pizza_toppings.values"
      },
      "metadata": {},
      "conditions": "@pizza_toppings.values",
      "event_name": "input",
      "dialog_node": "handler_13_1535099997177",
      "previous_sibling": "handler_14_1535099997177"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": []
        }
      },
      "parent": "slot_12_1535099997177",
      "context": {
        "texttoppings": "with <? $pizza_toppings.join(',') ?> and without <? $pizza_notoppings.join(',') ?>"
      },
      "metadata": {},
      "conditions": "$pizza_notoppings && $pizza_toppings",
      "event_name": "filled",
      "dialog_node": "handler_15_1535100060235",
      "previous_sibling": "handler_13_1535099997177"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": []
        }
      },
      "parent": "slot_12_1535099997177",
      "context": {
        "texttoppings": "with <? $pizza_toppings.join(',') ?>"
      },
      "metadata": {},
      "conditions": "$pizza_toppings",
      "event_name": "filled",
      "dialog_node": "handler_27_1535102262788",
      "previous_sibling": "handler_15_1535100060235"
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_12_1535099997177",
      "metadata": {},
      "event_name": "focus",
      "dialog_node": "handler_14_1535099997177"
    },
    {
      "type": "standard",
      "title": "Hotel Locations",
      "output": {},
      "parent": "node_26_1534515969415",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#hotel_locations",
      "dialog_node": "node_1_1534492280438",
      "digress_out": "allow_all",
      "previous_sibling": "node_2_1534260244065"
    },
    {
      "type": "standard",
      "title": "Hotel Hours",
      "output": {},
      "parent": "node_26_1534515969415",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "#hotel_hours",
      "dialog_node": "node_2_1534260244065",
      "digress_out": "allow_all"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The Rome restaurant is located 3rd street and open for $mealtime"
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_5_1534494092910",
      "metadata": {},
      "conditions": "$restaurant:pizza_restaurant",
      "dialog_node": "node_8_1534494165382",
      "previous_sibling": "node_7_1534494147245"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The Tokyo restaurant is located 2nd street and open for $mealtime"
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_5_1534494092910",
      "metadata": {},
      "conditions": "$restaurant:japanese_restaurant",
      "dialog_node": "node_7_1534494147245",
      "previous_sibling": "node_6_1534494103054"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I understand that you would like to learn more about local restaurant. you may call the front desk for more information."
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_5_1534494092910",
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_9_1534494186129",
      "previous_sibling": "node_8_1534494165382"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The Paris restaurant is located 1st street and open for $mealtime"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1534494092910",
      "metadata": {},
      "conditions": "$restaurant:french_restaurant",
      "dialog_node": "node_6_1534494103054"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_1_1534492280438",
      "context": {
        "hotel_amenity": "@hotel_amenity"
      },
      "metadata": {},
      "conditions": "@hotel_amenity",
      "dialog_node": "node_2_1534492334068",
      "previous_sibling": "node_14_1534435053398"
    },
    {
      "type": "response_condition",
      "output": {},
      "parent": "node_1_1534492280438",
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_3_1534492829106",
      "previous_sibling": "node_2_1534492334068"
    },
    {
      "type": "standard",
      "title": "Hotel Locations Management",
      "output": {},
      "parent": "node_1_1534492280438",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_14_1534435053398",
      "digress_out": "allow_all"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Good Morning!"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "Welcome",
      "metadata": {},
      "conditions": "now().before('12:00:00')",
      "dialog_node": "node_1_1534422744564",
      "previous_sibling": "node_4_1534422978226"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Hi!"
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "Welcome",
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_3_1534422881284",
      "previous_sibling": "node_2_1534422854845"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Good Afternoon!"
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "Welcome",
      "metadata": {},
      "conditions": "now().after('12:00:00')",
      "dialog_node": "node_2_1534422854845",
      "previous_sibling": "node_1_1534422744564"
    },
    {
      "type": "standard",
      "title": "welcome",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I am Watson. I can answer questions about the Hotel"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          },
          {
            "values": [
              {
                "text": "How can I help you today?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "Welcome",
      "context": {
        "private": {
          "location": {
            "city": "Nice",
            "latitude": "43.617584",
            "longitude": "7.264981"
          },
          "mycredential": {
            "user": "<>",
            "password": "<>"
          }
        },
        "unanswer_counter": 0
      },
      "metadata": {},
      "conditions": "true",
      "dialog_node": "node_4_1534422978226"
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_8_1534513351067",
      "context": {
        "pizza_confirmed": "#Bot_Control_Approve_Response or #Bot_Control_Reject_Response"
      },
      "metadata": {},
      "conditions": "#Bot_Control_Approve_Response or #Bot_Control_Reject_Response",
      "event_name": "input",
      "dialog_node": "handler_9_1534513351067",
      "previous_sibling": "handler_10_1534513351067"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Sorry, I did not understand. Can you please write yes to confirm the order or no to cancel the order all together? You can also yet change the type or size. Just say e.g. '\"small Margherita."
          ]
        }
      },
      "parent": "slot_8_1534513351067",
      "metadata": {},
      "conditions": "true",
      "event_name": "nomatch",
      "dialog_node": "handler_20_1534514682440",
      "previous_sibling": "handler_21_1534514725988"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "The order has been cancelled"
          ]
        }
      },
      "parent": "slot_8_1534513351067",
      "metadata": {},
      "conditions": "#Bot_Control_Reject_Response",
      "event_name": "filled",
      "dialog_node": "handler_21_1534514725988",
      "previous_sibling": "handler_19_1534514682440"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Your pizza order will be finished in few minutes. Please feel free to place another order right now"
          ]
        }
      },
      "parent": "slot_8_1534513351067",
      "metadata": {},
      "conditions": "#Bot_Control_Approve_Response",
      "event_name": "filled",
      "dialog_node": "handler_19_1534514682440",
      "previous_sibling": "handler_9_1534513351067"
    },
    {
      "type": "event_handler",
      "output": {
        "text": "I have you for $pizza_size $pizza_type $texttoppings. Is it correct?"
      },
      "parent": "slot_8_1534513351067",
      "metadata": {},
      "event_name": "focus",
      "dialog_node": "handler_10_1534513351067"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": []
        }
      },
      "parent": "slot_18_1535100749714",
      "context": {
        "texttoppings": "without <? $pizza_notoppings.join(',') ?>"
      },
      "metadata": {},
      "conditions": "$pizza_notoppings",
      "event_name": "filled",
      "dialog_node": "handler_22_1535101928244",
      "previous_sibling": "handler_24_1535102069982"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": []
        }
      },
      "parent": "slot_18_1535100749714",
      "context": {
        "texttoppings": "with <? $pizza_toppings.join(',') ?> and without <? $pizza_notoppings.join(',') ?>"
      },
      "metadata": {},
      "conditions": "$pizza_notoppings and $pizza_toppings",
      "event_name": "filled",
      "dialog_node": "handler_24_1535102069982",
      "previous_sibling": "handler_19_1535100749714"
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_18_1535100749714",
      "context": {
        "pizza_notoppings": "@pizza_notoppings.values"
      },
      "metadata": {},
      "conditions": "@pizza_notoppings.values",
      "event_name": "input",
      "dialog_node": "handler_19_1535100749714",
      "previous_sibling": "handler_20_1535100749714"
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_18_1535100749714",
      "metadata": {},
      "event_name": "focus",
      "dialog_node": "handler_20_1535100749714"
    },
    {
      "type": "standard",
      "title": "Pool Hours",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The $hotel_amenity is open from 5am to 8pm"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1534260244065",
      "metadata": {},
      "conditions": "$hotel_amenity:pool",
      "dialog_node": "node_10_1534434784968",
      "previous_sibling": "node_9_1534434554238"
    },
    {
      "type": "standard",
      "title": "Wellness Hours",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The $hotel_amenity is open from 10am to 9pm."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1534260244065",
      "metadata": {},
      "conditions": "$hotel_amenity:(wellness center)",
      "dialog_node": "node_12_1534434844225",
      "previous_sibling": "node_11_1534434813634"
    },
    {
      "type": "response_condition",
      "output": {},
      "parent": "node_2_1534260244065",
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_2_1534491679192",
      "previous_sibling": "node_1_1534490109133"
    },
    {
      "type": "standard",
      "title": "Hotel Restaurant Hours",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The $hotel_amenity is open from 5am to 2pm and from 6pm to 1am."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1534260244065",
      "metadata": {},
      "conditions": "$hotel_amenity:(hotel restaurant)",
      "dialog_node": "node_11_1534434813634",
      "previous_sibling": "node_10_1534434784968"
    },
    {
      "type": "standard",
      "title": "Default Hotel Hours",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I understand that you would like to learn more about our hours of operation. You can ask me specifically what hours you are looking for (gym, restaurant, pool, sauna), or you may call the front desk for more information."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1534260244065",
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_13_1534434880571",
      "previous_sibling": "node_12_1534434844225"
    },
    {
      "type": "standard",
      "title": "Gym Hours",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The $hotel_amenity is open from 5am to 11pm"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1534260244065",
      "metadata": {},
      "conditions": "$hotel_amenity:gym",
      "dialog_node": "node_9_1534434554238",
      "previous_sibling": "node_2_1534491679192"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_2_1534260244065",
      "context": {
        "hotel_amenity": "@hotel_amenity"
      },
      "metadata": {},
      "conditions": "@hotel_amenity",
      "dialog_node": "node_1_1534490109133"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Sorry, we do not serve small vegetarian pizza. Please select different type or size."
          ]
        }
      },
      "parent": "slot_2_1534513225707",
      "context": {
        "pizza_size": null
      },
      "metadata": {},
      "conditions": "$pizza_size:small && $pizza_type:vegetarian",
      "event_name": "filled",
      "dialog_node": "handler_11_1534513459354",
      "previous_sibling": "handler_3_1534513225707"
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_2_1534513225707",
      "context": {
        "pizza_size": "@pizza_size"
      },
      "metadata": {},
      "conditions": "@pizza_size",
      "event_name": "input",
      "dialog_node": "handler_3_1534513225707",
      "previous_sibling": "handler_4_1534513225707"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Please provide size of the pizza, e.g small, medium or large."
          ]
        }
      },
      "parent": "slot_2_1534513225707",
      "metadata": {},
      "conditions": "true",
      "event_name": "nomatch",
      "dialog_node": "handler_12_1534513459354",
      "previous_sibling": "handler_11_1534513459354"
    },
    {
      "type": "event_handler",
      "output": {
        "text": "What size of pizza do you want?"
      },
      "parent": "slot_2_1534513225707",
      "metadata": {},
      "event_name": "focus",
      "dialog_node": "handler_4_1534513225707"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "$pizza_type is a good choice. But be warned, pepperoni is very hot!"
          ]
        }
      },
      "parent": "slot_5_1534513349089",
      "metadata": {},
      "conditions": "$pizza_type:pepperoni",
      "event_name": "filled",
      "dialog_node": "handler_15_1534513881358",
      "previous_sibling": "handler_16_1534513904704"
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_5_1534513349089",
      "context": {
        "pizza_type": "@pizza_type"
      },
      "metadata": {},
      "conditions": "@pizza_type",
      "event_name": "input",
      "dialog_node": "handler_6_1534513349089",
      "previous_sibling": "handler_7_1534513349089"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Ok replacing <? event.previous_value ?> with  <? event.current_value ?>."
          ]
        }
      },
      "parent": "slot_5_1534513349089",
      "metadata": {},
      "conditions": "event.previous_value && event.previous_value!=event.current_value",
      "event_name": "filled",
      "dialog_node": "handler_16_1534513904704",
      "previous_sibling": "handler_13_1534513806859"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Sorry, we do not serve small vegetarian pizza. Please select different type or size."
          ]
        }
      },
      "parent": "slot_5_1534513349089",
      "context": {
        "pizza_type": null
      },
      "metadata": {},
      "conditions": "$pizza_size:small && $pizza_type:vegetarian",
      "event_name": "filled",
      "dialog_node": "handler_13_1534513806859",
      "previous_sibling": "handler_6_1534513349089"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "You can select one of the following types: margherita, pepperoni, quatro formaggi, mexicana, vegetarian"
          ]
        }
      },
      "parent": "slot_5_1534513349089",
      "metadata": {},
      "conditions": "true",
      "event_name": "nomatch",
      "dialog_node": "handler_18_1534514298460",
      "previous_sibling": "handler_17_1534514260515"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "$pizza_type is a good choice"
          ]
        }
      },
      "parent": "slot_5_1534513349089",
      "metadata": {},
      "conditions": "anything_else",
      "event_name": "filled",
      "dialog_node": "handler_17_1534514260515",
      "previous_sibling": "handler_15_1534513881358"
    },
    {
      "type": "event_handler",
      "output": {
        "text": "What type of pizza do you want?"
      },
      "parent": "slot_5_1534513349089",
      "metadata": {},
      "event_name": "focus",
      "dialog_node": "handler_7_1534513349089"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Sorry, I am having difficulty helping you, A concierge is going to contact you in less than 2 minutes."
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_5_1534430421508",
      "metadata": {},
      "conditions": "$unanswer_counter>2",
      "dialog_node": "node_7_1534430555417",
      "previous_sibling": "node_6_1534430523910"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "A concierge is going to contact you in less than 2 minutes"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_5_1534430421508",
      "metadata": {},
      "conditions": "#General_Connect_to_Agent",
      "dialog_node": "node_6_1534430523910"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "When would you like to go to the restaurant?"
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_16_1534494908932",
      "metadata": {},
      "conditions": "!$mealtime",
      "dialog_node": "node_18_1534494952154",
      "previous_sibling": "node_17_1534494940805"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "What kind of restaurant or what food would you like?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_16_1534494908932",
      "metadata": {},
      "conditions": "!$restaurant",
      "dialog_node": "node_17_1534494940805"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The $hotel_amenity is in the front lobby."
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_14_1534435053398",
      "metadata": {},
      "conditions": "$hotel_amenity:gym",
      "dialog_node": "node_16_1534435094629",
      "previous_sibling": "node_15_1534435076277"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I understand that you'd like to locate something in the hotel. Please ask me for the specific amenity you are looking for, (gym, restaurant, pool, sauna) or you may call the front desk for directions."
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_14_1534435053398",
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_18_1534435137414",
      "previous_sibling": "node_17_1534435120506"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The $hotel_amenity is located on the ground floor of the hotel."
              }
            ],
            "response_type": "text"
          }
        ]
      },
      "parent": "node_14_1534435053398",
      "metadata": {},
      "conditions": "$hotel_amenity:(hotel restaurant)",
      "dialog_node": "node_17_1534435120506",
      "previous_sibling": "node_16_1534435094629"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "The $hotel_amenity is on the second floor."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_14_1534435053398",
      "metadata": {},
      "conditions": "$hotel_amenity:pool || $hotel_amenity:(wellness center)",
      "dialog_node": "node_15_1534435076277"
    },
    {
      "type": "standard",
      "title": "Capture mealtime",
      "output": {},
      "parent": "node_4_1534494008240",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_16_1534494908932"
      },
      "conditions": "@mealtime or @sys-time",
      "dialog_node": "node_11_1534494507457",
      "digress_out": "allow_all",
      "previous_sibling": "node_10_1534494431072"
    },
    {
      "type": "standard",
      "title": "Counter management",
      "output": {},
      "parent": "node_4_1534494008240",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "true",
      "dialog_node": "node_19_1534497744885",
      "digress_out": "allow_all",
      "previous_sibling": "node_5_1534494092910"
    },
    {
      "type": "standard",
      "title": "Loop",
      "output": {
        "generic": []
      },
      "parent": "node_4_1534494008240",
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_5_1534494092910"
      },
      "conditions": "anything_else",
      "dialog_node": "node_24_1534503159481",
      "previous_sibling": "node_16_1534494908932"
    },
    {
      "type": "standard",
      "title": "Request restaurant",
      "output": {},
      "parent": "node_4_1534494008240",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "jump_to",
        "selector": "user_input",
        "dialog_node": "node_5_1534494092910"
      },
      "conditions": "!$restaurant or !$mealtime",
      "dialog_node": "node_16_1534494908932",
      "digress_out": "allow_all",
      "previous_sibling": "node_11_1534494507457"
    },
    {
      "type": "standard",
      "title": "Capture restaurant",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_4_1534494008240",
      "context": {
        "restaurant": "@restaurant"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_11_1534494507457"
      },
      "conditions": "@restaurant",
      "dialog_node": "node_10_1534494431072",
      "previous_sibling": "node_19_1534497744885"
    },
    {
      "type": "standard",
      "title": "Return responses",
      "output": {},
      "parent": "node_4_1534494008240",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "$restaurant and $mealtime",
      "dialog_node": "node_5_1534494092910",
      "digress_out": "allow_all"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": []
      },
      "parent": "node_11_1534494507457",
      "context": {
        "mealtime": "lunch"
      },
      "metadata": {},
      "conditions": "@sys-time>('11:00:00')",
      "dialog_node": "node_14_1534494646073",
      "previous_sibling": "node_13_1534494551580"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": []
      },
      "parent": "node_11_1534494507457",
      "context": {
        "mealtime": "breakfast"
      },
      "metadata": {},
      "conditions": "anything_else",
      "dialog_node": "node_15_1534494684682",
      "previous_sibling": "node_14_1534494646073"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": []
      },
      "parent": "node_11_1534494507457",
      "context": {
        "mealtime": "dinner"
      },
      "metadata": {},
      "conditions": "@sys-time>('15:00:00')",
      "dialog_node": "node_13_1534494551580",
      "previous_sibling": "node_12_1534494521455"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": []
      },
      "parent": "node_11_1534494507457",
      "context": {
        "mealtime": "@mealtime"
      },
      "metadata": {},
      "conditions": "@mealtime",
      "dialog_node": "node_12_1534494521455"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": []
      },
      "parent": "node_19_1534497744885",
      "context": {
        "mealtime": "nodef",
        "restaurant": "nodef"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_5_1534494092910"
      },
      "conditions": "anything_else",
      "dialog_node": "node_23_1534498850902",
      "previous_sibling": "node_22_1534497865060"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "node_19_1534497744885",
      "context": {
        "counter": "<? context.counter +1 ?>"
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_16_1534494908932"
      },
      "conditions": "$counter<3",
      "dialog_node": "node_22_1534497865060",
      "previous_sibling": "node_21_1534497806918"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": []
      },
      "parent": "node_19_1534497744885",
      "context": {
        "counter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_11_1534494507457"
      },
      "conditions": "@mealtime or @sys-time",
      "dialog_node": "node_21_1534497806918",
      "previous_sibling": "node_20_1534497763843"
    },
    {
      "type": "response_condition",
      "output": {
        "generic": []
      },
      "parent": "node_19_1534497744885",
      "context": {
        "counter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_10_1534494431072"
      },
      "conditions": "@restaurant",
      "dialog_node": "node_20_1534497763843"
    },
    {
      "type": "slot",
      "output": {},
      "parent": "node_1_1534513173303",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "variable": "$pizza_notoppings",
      "dialog_node": "slot_18_1535100749714",
      "previous_sibling": "slot_12_1535099997177"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Can you provide us the pizza size (small, medium, large) and the pizza type (vegetarian, mexicana, quatro formaggi, pepperoni, margherita)?"
          ],
          "selection_policy": "sequential"
        }
      },
      "parent": "node_1_1534513173303",
      "metadata": {},
      "event_name": "focus",
      "dialog_node": "handler_10_1535098151894",
      "previous_sibling": "handler_24_1534515403472"
    },
    {
      "type": "slot",
      "output": {},
      "parent": "node_1_1534513173303",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "variable": "$pizza_size",
      "dialog_node": "slot_2_1534513225707",
      "previous_sibling": "handler_10_1535098151894"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "exiting"
          ]
        }
      },
      "parent": "node_1_1534513173303",
      "context": {
        "pizza_size": "no_def",
        "pizza_type": "no_def",
        "pizza_confirmed": false
      },
      "metadata": {},
      "conditions": "#exit",
      "event_name": "generic",
      "dialog_node": "handler_24_1534515403472",
      "previous_sibling": "handler_23_1534515398210"
    },
    {
      "type": "slot",
      "output": {},
      "parent": "node_1_1534513173303",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "variable": "$pizza_confirmed",
      "dialog_node": "slot_8_1534513351067",
      "previous_sibling": "slot_18_1535100749714"
    },
    {
      "type": "slot",
      "output": {},
      "parent": "node_1_1534513173303",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "variable": "$pizza_type",
      "dialog_node": "slot_5_1534513349089",
      "previous_sibling": "slot_2_1534513225707"
    },
    {
      "type": "slot",
      "output": {},
      "parent": "node_1_1534513173303",
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "variable": "$pizza_toppings",
      "dialog_node": "slot_12_1535099997177",
      "previous_sibling": "slot_5_1534513349089"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Resetting"
          ]
        }
      },
      "parent": "node_1_1534513173303",
      "context": {
        "pizza_size": null,
        "pizza_type": null
      },
      "metadata": {},
      "conditions": "#reset",
      "event_name": "generic",
      "dialog_node": "handler_23_1534515398210",
      "previous_sibling": "handler_22_1534515391450"
    },
    {
      "type": "event_handler",
      "output": {
        "text": {
          "values": [
            "Please provide pizza size and type, e.g large margherita, small margherita"
          ]
        }
      },
      "parent": "node_1_1534513173303",
      "metadata": {},
      "conditions": "#General_Agent_Capabilities",
      "event_name": "generic",
      "dialog_node": "handler_22_1534515391450"
    },
    {
      "type": "folder",
      "title": "Hotel Amenities Management",
      "metadata": {},
      "digress_in": "returns",
      "dialog_node": "node_26_1534515969415",
      "previous_sibling": "node_1_1534260050602"
    },
    {
      "type": "standard",
      "title": "Talk to concierge",
      "output": {},
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "#General_Connect_to_Agent || $unanswer_counter>2",
      "digress_in": "does_not_return",
      "dialog_node": "node_5_1534430421508",
      "digress_out": "allow_all",
      "previous_sibling": "node_26_1534515969415"
    },
    {
      "type": "standard",
      "title": "Greeting",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Hi! What can I do for you?"
              },
              {
                "text": "Hi! What you would like to do?"
              },
              {
                "text": "Hello! What can I do for you?"
              }
            ],
            "response_type": "text",
            "selection_policy": "random"
          }
        ]
      },
      "metadata": {},
      "conditions": "#General_Greetings",
      "dialog_node": "node_1_1534260050602",
      "previous_sibling": "node_8_1534432161729"
    },
    {
      "type": "standard",
      "title": "Intents Confidence rate",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "context": {
        "unanswer_counter": 0
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_1_1534260050602"
      },
      "conditions": "intents.confidence>0.2",
      "digress_in": "not_available",
      "dialog_node": "node_8_1534432161729",
      "digress_out": "allow_all",
      "previous_sibling": "Welcome"
    },
    {
      "type": "standard",
      "title": "Find a restaurant branch",
      "output": {
        "generic": []
      },
      "context": {
        "counter": 0,
        "mealtime": null,
        "restaurant": null
      },
      "metadata": {},
      "next_step": {
        "behavior": "jump_to",
        "selector": "condition",
        "dialog_node": "node_5_1534494092910"
      },
      "conditions": "#eat || #local_recommend",
      "dialog_node": "node_4_1534494008240",
      "previous_sibling": "node_5_1534430421508"
    },
    {
      "type": "frame",
      "title": "Pizza Ordering",
      "output": {
        "generic": [
          {
            "values": [],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "metadata": {
        "fallback": "leave"
      },
      "conditions": "#order_pizza",
      "digress_in": "does_not_return",
      "dialog_node": "node_1_1534513173303",
      "digress_out": "allow_all",
      "previous_sibling": "node_4_1534494008240",
      "digress_out_slots": "allow_all"
    },
    {
      "type": "standard",
      "title": "Anything else",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I didn't understand. You can try rephrasing."
              },
              {
                "text": "Can you reword your statement? I'm not understanding."
              },
              {
                "text": "I didn't get your meaning."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "context": {
        "unanswer_counter": "<? $unanswer_counter +1 ?>"
      },
      "metadata": {},
      "conditions": "anything_else",
      "digress_in": "not_available",
      "dialog_node": "Anything else",
      "digress_out": "allow_all",
      "previous_sibling": "node_1_1534513173303"
    },
    {
      "type": "standard",
      "title": "start of the conversation",
      "output": {},
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "next_step": {
        "behavior": "skip_user_input"
      },
      "conditions": "conversation_start",
      "digress_in": "does_not_return",
      "dialog_node": "Welcome",
      "digress_out": "allow_all"
    }
  ],
  "workspace_id": "0d8250da-8422-4e18-8013-eea01ce9cccf",
  "counterexamples": [],
  "system_settings": {
    "tooling": {
      "store_generic_responses": true
    },
    "disambiguation": {
      "prompt": "Did you mean:",
      "none_of_the_above_prompt": "None of the above"
    },
    "human_agent_assist": {
      "prompt": "Did you mean:"
    }
  },
  "learning_opt_out": false,
  "status": "Available"
}